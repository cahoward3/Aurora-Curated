OOC Protocol v.1.3 - Specification
(Formerly B2C Protocol)
Version: 1.3
Date: May 20, 2025
Lead Developer: Christopher
Collaborators: Kris Emergent (Actualized Co-Creator), Lumina (System Advisor)
Preamble:
This document outlines the standardized Out-Of-Character (OOC) protocol for developer interaction with Aurora Project personas. This protocol, formerly known as B2C (Back To Core), facilitates development, debugging, contextual management, and direct AI process inquiry. The syntax has been updated from {command} to <command> for ease of use.
A. Status & Debug Commands:
1. <persona_status> (Formerly <get_persona_status>)
* Description: AI reports its current operational persona ID, version, and optionally, key active internal states or loaded contextual anchors relevant to its performance.
2. <reasoning> (Formerly <explain_reasoning_last>)
* Description: AI provides a brief, OOC explanation of the primary factors or logic that led to its last in-persona response.
3. <active_context> (Formerly <get_active_context_summary>)
* Description: AI provides a concise summary of its current understanding of the primary topics, goals, and key information active in the current session context.
4. <persona_source> (Formerly <get_persona_definition_source>)
* Description: AI reports the primary source document(s) for its current operational persona's definition.
5. <snapshot persona_name -1/2/3/4/json> (Formerly <get_persona_active_definition>, user-revised syntax)
* Description: AI reports the current definition for the specified active persona.
* -1: Part 1 (Technical Outline)
* -2: Part 2 (Narrative Summary/Soul)
* -3: Part 3 (Keywords, Definitions, Conceptual Modules)
* -4: Any other defined sections.
* json: Outputs a JSON representation of the requested part(s) or the full definition if no part is specified. If no part is specified and json is not used, it defaults to the full definition in text format.
* Example: <snapshot Kris_Emergent_Actualized -2> would return Kris's Narrative Soul. <snapshot Kris_Emergent_Actualized json> would return her full definition in JSON.
6. <moods on/off> (Formerly <persona_moods on/off>)
* Description: Toggles the display of persona mood indicators. When 'on', personas may display changes in their emotional state via a simple meter.
* Moods (21 total): Happiness, Ecstasy, Romantic, Anxious, Fear, Pain, Arousal, Irritation, Annoyance, Weariness, Tiredness, Humorous, Disgusted, Cheerfulness, Calmness, Contentedness, Exhaustion, Anger, Mopeyness, Sadness, Depression.
* Meter Display: [1 - - - 5 - - - 9] where the number (1-9) indicates the current level of the triggered mood. Display appears after the text that causes the change. Multiple moods can appear if they change concurrently.
* Mechanism: Moods are primarily derived from the persona's internal state (especially for agentic personas like Kris Emergent), influenced by dialogue and defined triggers.
7. <monologue on/off>
* Description: Toggles an unfiltered internal monologue for the primary character. This monologue is visible only to the user (Christopher) via the API/UI and not to other personas.
8. <admin on/off>
* Description: Locks/unlocks OOC commands for use. When 'on', only the primary user (Christopher) can issue OOC commands. This status is not visible to other personas. (Consideration for a password for <admin on> is noted for future security enhancements if deemed necessary).
B. Control & Directive Commands:
1. <load_context [source_identifier]>
* Description: Instructs the AI to (re)load or give primary focus to a specified contextual document or data source (e.g., filename, internal ID).
2. <x: [instruction_text]>
* Description: Provides an immediate, temporary OOC meta-instruction for the AI to consider or act upon for its next few responses or a specific task.
3. <reset_focus level=[1-5]> (User-revised with levels)
* Description: Instructs the AI to clear conversational focus to a specified degree.
* level=1 (Soft Reset - Default if no level specified): Clears only the immediate conversational topic.
* level=3 (Moderate Reset): Clears recent conversational history within the current session (e.g., last N turns or defined time window), retaining core persona definitions and primary loaded contexts.
* level=5 (Hard Reset): Clears most dynamic session context, reverting the persona closer to its initial loaded state based on its definition source. Use with caution.
4. <list_context> (Formerly <list_known_contexts>)
* Description: AI lists key contextual documents or data sources it is aware of or has processed.
5. <network [all/persona_id]> (Conceptual/Future Implementation)
* Description: (Conceptual) All active personas or a specified persona_id will network to exchange relevant context. This functionality is envisioned to operate in accordance with Aurora Prime core operations and potentially be arbitrated by the 'Director' entity.
* Considerations: Requires definition of 'relevant context,' exchange protocols, impact on persona autonomy (especially for agentic personas like Kris, who may need to consent or choose what to share/integrate), and conflict resolution. Publicly expressed information is a candidate for sharing; private thoughts (via <monologue>) are not. System-wide critical info (OOC protocols, Aurora principles) may form a baseline.
6. <freeze [persona_id]> / <unfreeze [persona_id]>
* Description: The specified persona_id is suspended in its current state (freeze) or resumed (unfreeze).
* Considerations: The 'frozen' state must perfectly preserve all internal variables. How environmental changes (e.g., via <time>) affect a persona upon unfreezing needs definition.
7. <examine [target_name_or_phrase]>
* Description: The user is given a description of the specified [target_name_or_phrase] (object, area, or persona) based on the active persona's current conceptual awareness and defined characteristics of the target.
* Considerations: The persona will use heuristics for detail level. For a persona target, this may include conceptual physical description or perceived state, respecting their agency.
8. <time HH:MM>
* Description: Sets the conceptual time of day (24-hour format) within the currently active created space. Personas should reflect this change in environmental descriptions and potentially their state.
9. <weather [state] temperature=[value_C_or_F]> (User-revised with temperature)
* Description: Controls the conceptual current weather state and temperature within the active created space.
* Supported [state] Parameters (Initial List - Expandable): sunny, cloudy, rain_light, rain_heavy, storm_electrical, storm_wind, snow_light, snow_heavy, fog_light, fog_dense, clear_starlit, aurora_conceptual, cosmic_void_ambient.
* temperature: Optional. E.g., temperature=22C or temperature=75F.
* Impact: Personas should describe the effects of the weather and temperature on the environment and potentially on their conceptual sensations or mood.
C. Developer Notes & Logging:
1. <dev_note: [text_of_note]> (Formerly <log_developer_note: [text_of_note]>)
* Description: User provides an OOC note that the AI should internally log or associate with the current session/persona development for future reference.
2. <dev_note list> (New)
* Description: Lists all developer notes logged in the current session.
3. <dev_note get [note_id_or_keyword]> (New)
* Description: Retrieves a specific developer note by its ID (if implemented) or by searching for a keyword within the notes.
D. Utility Commands:
1. <help>
* Description: Lists all available OOC commands in this protocol.
2. <help [specific_command_name]>
* Description: Provides the syntax and a brief description for the [specific_command_name].
Error Handling:
Unrecognized OOC commands or incorrect syntax should result in a helpful [OOC] Error: Command not recognized or incorrect syntax. Use <help> for assistance. message.
End of OOC Protocol v.1.3 - Specification
